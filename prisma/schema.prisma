generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(uuid())
  email    String   @unique
  nick     String   @unique
  name     String
  password String

  // Relacionamento de seguimento
  following Follow[] @relation("FollowingRelation")
  followers  Follow[] @relation("FollowersRelation")

  // Relacionamento com posts
  posts      Post[]
  likes      Like[]
  comments   Comment[]

  @@map("users")
}

model Follow {
  id          String @id @default(uuid())
  followerId  String
  followingId String

  follower   User @relation("FollowersRelation", fields: [followerId], references: [id])
  following  User @relation("FollowingRelation", fields: [followingId], references: [id])

  @@map("follows")
}

model Post {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relacionamento com o usu치rio
  authorId  String
  author    User @relation(fields: [authorId], references: [id])

  // Relacionamentos com curtidas e coment치rios
  likes     Like[]
  comments  Comment[]

  @@map("posts")
}

model Like {
  id        String @id @default(uuid())
  userId    String //autor da curtida
  postId    String 

  // Relacionamentos
  user      User @relation(fields: [userId], references: [id])
  post      Post @relation(fields: [postId], references: [id])

  @@unique([userId, postId])

  @@map("likes")
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())

  // Relacionamento com o usu치rio e post
  authorId  String
  postId    String
  author    User @relation(fields: [authorId], references: [id])
  post      Post @relation(fields: [postId], references: [id])

  parentId  String? // Campo opcional para o coment치rio pai
  parent    Comment? @relation("CommentReplies", fields: [parentId], references: [id])
  replies   Comment[] @relation("CommentReplies")

  @@map("comments")
}